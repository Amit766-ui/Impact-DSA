Day4

Switch in Java

Cases have to be the same type as expressions, must be a constant or literal
-duplicate case values are not allowed
-break is use to terminate the sequence
-if break is not used, it will continue to next case
-default will execute when none of the above got executed
-if default is not at the end, put break after it

switch(expression){
      case: 
            Statement;
            break;
      default:
            Statement;
}


import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int num=sc.nextInt();
        switch (num){
            case 1:
                System.out.println("Monday");
                break;
            case 2:
                System.out.println("Tuesday");
                break;
            case 3:
                System.out.println("Wednesday");
                break;
            case 4:
                System.out.println("Thursday");
                break;
            case 5:
                System.out.println("Friday");
                break;
            case 6:
                System.out.println("Saturday");
                break;
                case 7:
                    System.out.println("Sunday");
                    break;
            default:
                System.out.println("weekdays");
        }

    }
}



terniary operator in java

The ternary operator in Java is a concise way to express conditional logic. It acts as a shorthand for simple if-else statements, 
allowing you to evaluate a condition and return one of two values based on whether the condition is true or false.
Syntax-
(condition) ? statement1 : statement2;
(n==5) ? System.out.println("Yes") : System.out.println("No");

in collections we don't have index values in those situations we have to use for each loop.

int arr[]={1,2,3,4,5};

for(var : arr){
   System.out.println(var)
}


import java.util.*;
public class Main{
    public static void main(String[] args){
        int n=123;
        int res=0;        //reverse
        while(n!=0){
            int rem=n%10;
            res=res*10+rem;
            n=n/10;
        }
        System.out.println(res);

        int m=123;
        int rev=0;             //sum of digits
        while(m>9){
            while(m!=0){
                int remi=m%10;
                rev=rev+remi;
                m=m/10;
            }
            m=rev;
        }
        System.out.println(m);



        int num=5;
        for(int i=1;i<=num;i++){
            for(int j=1;j<=num-i;j++){
                System.out.print(" ");          //increasing number pyramid
            }
            for(int j=1;j<=2*i-1;j++){          
                System.out.print(j);
            }
            System.out.println();
        }

        for(int i=1;i<=num;i++){
            for(int j=1;j<=i;j++){
                System.out.print("");          //Right angle number pyramid
            }
            for(int j=1;j<=2*i-1;j++){
                System.out.print(j);
            }
            System.out.println();
        }

        for(int i=num;i>=1;i--){
            for(int j=1;j<=num-i;j++){
                System.out.print(" ");        //reverse number increasing pyramid
            }
            for(int j=1;j<=2*i-1;j++){
                System.out.print(j);
            }
            System.out.println();
        }

        for(int i=1;i<=num;i++){
            for(int j=1;j<=i;j++){
                System.out.print(" ");        
            }
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            System.out.println();
        }                                       //Boomerang 
        for(int i=num;i>=1;i--){
            for(int j=1;j<=i;j++){
                System.out.print(" ");
            }
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            System.out.println();
        }

        for(int i=num;i>=1;i--){
            for(int j=1;j<=i;j++){
                System.out.print("");          //reverse right angle star pyramid
            }
            for(int j=1;j<=2*i-1;j++){
                System.out.print("*");
            }
            System.out.println();
        }

    }
}
